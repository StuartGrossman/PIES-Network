[debug] [2018-08-22T00:47:31.712Z] ----------------------------------------------------------------------
[debug] [2018-08-22T00:47:31.715Z] Command:       /Users/Stu/.nvm/versions/node/v6.2.2/bin/node /Users/Stu/.nvm/versions/node/v6.2.2/bin/firebase deploy
[debug] [2018-08-22T00:47:31.715Z] CLI Version:   4.0.3
[debug] [2018-08-22T00:47:31.715Z] Platform:      darwin
[debug] [2018-08-22T00:47:31.715Z] Node Version:  v6.2.2
[debug] [2018-08-22T00:47:31.716Z] Time:          Tue Aug 21 2018 17:47:31 GMT-0700 (PDT)
[debug] [2018-08-22T00:47:31.716Z] ----------------------------------------------------------------------
[debug] 
[debug] [2018-08-22T00:47:31.729Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2018-08-22T00:47:31.729Z] > authorizing via signed-in user
[debug] [2018-08-22T00:47:31.731Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2018-08-22T00:47:31.732Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 { refresh_token: '1/R4s83v7cfCOVHA5QR_qeC1MeyMdVyI97evV2URD0JLlexq9O2Zqou91wYIYIC1r9',
  client_id: '563584335869-fgrhgmd47bqnekij5i8b5pr03ho849e6.apps.googleusercontent.com',
  client_secret: 'j9iVZfS8kkCEFUPaAeJV0sAi',
  grant_type: 'refresh_token',
  scope: 'email https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/cloudplatformprojects.readonly https://www.googleapis.com/auth/firebase openid' } 
 Tue Aug 21 2018 17:47:31 GMT-0700 (PDT)
[debug] [2018-08-22T00:47:31.908Z] <<< HTTP RESPONSE 200
[debug] [2018-08-22T00:47:31.913Z] >>> HTTP REQUEST GET https://admin.firebase.com/v1/projects/adspace-9fe5c  
  
 Tue Aug 21 2018 17:47:31 GMT-0700 (PDT)
[debug] [2018-08-22T00:48:03.384Z] ----------------------------------------------------------------------
[debug] [2018-08-22T00:48:03.387Z] Command:       /Users/Stu/.nvm/versions/node/v6.2.2/bin/node /Users/Stu/.nvm/versions/node/v6.2.2/bin/firebase deploy
[debug] [2018-08-22T00:48:03.388Z] CLI Version:   4.0.3
[debug] [2018-08-22T00:48:03.388Z] Platform:      darwin
[debug] [2018-08-22T00:48:03.388Z] Node Version:  v6.2.2
[debug] [2018-08-22T00:48:03.388Z] Time:          Tue Aug 21 2018 17:48:03 GMT-0700 (PDT)
[debug] [2018-08-22T00:48:03.389Z] ----------------------------------------------------------------------
[debug] 
[debug] [2018-08-22T00:48:03.402Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2018-08-22T00:48:03.402Z] > authorizing via signed-in user
[debug] [2018-08-22T00:48:03.405Z] >>> HTTP REQUEST GET https://admin.firebase.com/v1/projects/adspace-9fe5c  
  
 Tue Aug 21 2018 17:48:03 GMT-0700 (PDT)
[debug] [2018-08-22T00:48:03.776Z] <<< HTTP RESPONSE 200
[debug] [2018-08-22T00:48:03.778Z] >>> HTTP REQUEST GET https://admin.firebase.com/v1/database/adspace-9fe5c/tokens  
  
 Tue Aug 21 2018 17:48:03 GMT-0700 (PDT)
[debug] [2018-08-22T00:48:04.146Z] <<< HTTP RESPONSE 200
[warn] âš   functions: package.json indicates an outdated version of firebase-functions.
 Please upgrade using npm install --save firebase-functions@latest in your functions directory.
[info] 
[info] === Deploying to 'adspace-9fe5c'...
[info] 
[info] i  deploying database, functions, hosting
[info] i  database: checking rules syntax...
[debug] [2018-08-22T00:48:05.452Z] >>> HTTP REQUEST PUT https://adspace-9fe5c.firebaseio.com/.settings/rules.json?dryRun=true  
 {
  "rules": {
    ".read": false,
    ".write": false,
    "user": {
      ".read": false,
      ".write": false,
      "$user_id": {
        // grants write access to the owner of this user account
        // whose uid must exactly match the key ($user_id)
        ".write": "$user_id === auth.uid",
        ".read": "$user_id === auth.uid"

      }
    },
    "usertype": {
      ".read": false,
    	".write": false,
      "$user_id": {
        // grants write access to the owner of this user account
        // whose uid must exactly match the key ($user_id)
        ".write": "$user_id === auth.uid",
        ".read": "$user_id === auth.uid"

      }
    },
    "terms": {
      ".read": false,
      ".write": false
    },
    "contractAddress": {
      ".read": false,
      ".write": false
    },
 		"mainAddress": {
      ".read": false,
      ".write": false
    },
    "tag": {
      ".read": false,
    	".write": false,
      "$user_id": {

        // grants write access to the owner of this user account
        // whose uid must exactly match the key ($user_id)
        // ".write": "$user_id === auth.uid",
        ".read": "$user_id === auth.uid"

      }
    },
    "catagory":{
      ".read": false,
      ".write": false
    },
    "esgrow": {
      ".read": false,
      ".write": false
    },
    "phoneAttempts": {
      ".read": false,
      ".write": false,
      "$user_id": {
        // grants write access to the owner of this user account
        // whose uid must exactly match the key ($user_id)
        // ".write": "$user_id === auth.uid",
        ".read": "$user_id === auth.uid"
      }
    },
    "phone": {
      ".read": false,
      ".write": false,
        "$user_id": {
        // grants write access to the owner of this user account
        // whose uid must exactly match the key ($user_id)
        ".write": false,
        ".read": "$user_id === auth.uid"
      }
    },
    "activecontent": {
      ".read": false,
      ".write": false
    },
    "viewercontent":{
      ".read": false,
      ".write": false
    },
    "preview": {
      ".read": true,
      ".write": true
    },
    "balance": {
      ".read": true,
      ".write": false
    },
    "internalBalance": {
      ".read": true,
      ".write": false
    },
    "fee": {
      ".read": true,
      ".write": false
    },


    ////// QUEUES
    "queue": {
      "myEthBalance": {
       "tasks": {
       ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"

          }
        }
      },
      "myEthAddress": {
       "tasks": {
       ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "withdrawPhoneCheck": {
       "tasks": {
       ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "withdrawlAmmount": {
       "tasks": {
       ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "addTags": {
       "tasks": {
       ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "phone": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "confirmPhone": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"

          }
        }
      },
      "usertype10": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"

          }
        }
      },
      "usertype99": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"

          }
        }
      },
      "confirmCode": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".read": false,
      		 ".write": false
          }
        }
      },
      "ipfs": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "terms": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"

          }
        }
      },
      "uploadContent": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "addBrandTags": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": true
          }
        }
      }
    }
  }
}
 
 Tue Aug 21 2018 17:48:05 GMT-0700 (PDT)
[debug] [2018-08-22T00:48:05.820Z] <<< HTTP RESPONSE 200
[info] âœ”  database: rules syntax for database adspace-9fe5c is valid
[debug] [2018-08-22T00:48:05.824Z] > [functions] package.json contents: {
  "name": "functions",
  "description": "Cloud Functions for Firebase",
  "dependencies": {
    "firebase-admin": "~4.1.2",
    "firebase-functions": "^0.5"
  },
  "private": true
}
[info] i  functions: ensuring necessary APIs are enabled...
[debug] [2018-08-22T00:48:05.825Z] >>> HTTP REQUEST GET https://servicemanagement.googleapis.com/v1/services/cloudfunctions.googleapis.com/projectSettings/adspace-9fe5c?view=CONSUMER_VIEW  
  
 Tue Aug 21 2018 17:48:05 GMT-0700 (PDT)
[debug] [2018-08-22T00:48:05.826Z] >>> HTTP REQUEST GET https://servicemanagement.googleapis.com/v1/services/runtimeconfig.googleapis.com/projectSettings/adspace-9fe5c?view=CONSUMER_VIEW  
  
 Tue Aug 21 2018 17:48:05 GMT-0700 (PDT)
[debug] [2018-08-22T00:48:06.558Z] <<< HTTP RESPONSE 200
[debug] [2018-08-22T00:48:06.637Z] <<< HTTP RESPONSE 200
[info] âœ”  functions: all necessary APIs are enabled
[debug] [2018-08-22T00:48:06.638Z] >>> HTTP REQUEST GET https://cloudresourcemanager.googleapis.com/v1/projects/adspace-9fe5c  
  
 Tue Aug 21 2018 17:48:06 GMT-0700 (PDT)
[debug] [2018-08-22T00:48:06.926Z] <<< HTTP RESPONSE 200
[debug] [2018-08-22T00:48:06.927Z] >>> HTTP REQUEST GET https://mobilesdk-pa.googleapis.com/v1/projects/129227170241:getServerAppConfig  
  
 Tue Aug 21 2018 17:48:06 GMT-0700 (PDT)
[debug] [2018-08-22T00:48:07.281Z] <<< HTTP RESPONSE 200
[info] i  functions: preparing functions directory for uploading...
[debug] [2018-08-22T00:48:07.286Z] >>> HTTP REQUEST GET https://runtimeconfig.googleapis.com/v1beta1/projects/adspace-9fe5c/configs  
  
 Tue Aug 21 2018 17:48:07 GMT-0700 (PDT)
[debug] [2018-08-22T00:48:07.475Z] <<< HTTP RESPONSE 200
[info] i  hosting: preparing views directory for upload...
[debug] [2018-08-22T00:48:09.475Z] >>> HTTP REQUEST PUT https://deploy.firebase.com/v1/hosting/adspace-9fe5c/uploads/-LKU5_dEPPS2KVHG07JX?fileCount=752&message=  
  
 Tue Aug 21 2018 17:48:09 GMT-0700 (PDT)
