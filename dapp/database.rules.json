{
  "rules": {
    ".read": false,
    ".write": false,
    "user": {
      ".read": false,
      ".write": false,
      "$user_id": {
        // grants write access to the owner of this user account
        // whose uid must exactly match the key ($user_id)
        ".write": "$user_id === auth.uid",
        ".read": "$user_id === auth.uid"

      }
    },
    "usertype": {
      ".read": false,
    	".write": false,
      "$user_id": {
        // grants write access to the owner of this user account
        // whose uid must exactly match the key ($user_id)
        ".write": "$user_id === auth.uid",
        ".read": "$user_id === auth.uid"

      }
    },
    "terms": {
      ".read": false,
      ".write": false
    },
    "contractAddress": {
      ".read": false,
      ".write": false
    },
 		"mainAddress": {
      ".read": false,
      ".write": false
    },
    "tags": {
      ".read": false,
    	".write": false,
      "$user_id": {

        // grants write access to the owner of this user account
        // whose uid must exactly match the key ($user_id)
        // ".write": "$user_id === auth.uid",
        ".read": "$user_id === auth.uid"

      }
    },
    "userData": {
      ".read": false,
      ".write": false,
      "$user_id": {
        ".write": false,
        ".read": "$user_id === auth.uid"

      }
    },
    "catagory":{
      ".read": false,
      ".write": false
    },
    "esgrow": {
      ".read": false,
      ".write": false
    },
    "stripe": {
      ".read": false,
      ".write": false
    },
    "phoneAttempts": {
      ".read": false,
      ".write": false,
      "$user_id": {
        // grants write access to the owner of this user account
        // whose uid must exactly match the key ($user_id)
        // ".write": "$user_id === auth.uid",
        ".read": "$user_id === auth.uid"
      }
    },
    "phone": {
      ".read": false,
      ".write": false,
        "$user_id": {
        // grants write access to the owner of this user account
        // whose uid must exactly match the key ($user_id)
        ".write": false,
        ".read": "$user_id === auth.uid"
      }
    },
    "progressBar": {
      ".read": false,
      ".write": false,
        "$user_id": {
        // grants write access to the owner of this user account
        // whose uid must exactly match the key ($user_id)
        ".write": false,
        ".read": "$user_id === auth.uid"
      }
    },
    "content": {
      ".read": false,
      ".write": false,
        "$user_id": {
        // grants write access to the owner of this user account
        // whose uid must exactly match the key ($user_id)
        ".write": false,
        ".read": "$user_id === auth.uid"
      }
    },
    "publishedContent": {
      ".read": true,
      ".write": false,
    },
    "activecontent": {
      ".read": false,
      ".write": false
    },
    "preview": {
      ".read": true,
      ".write": true
    },
    "balance": {
      ".read": true,
      ".write": false
    },
    "internalBalance": {
      ".read": true,
      ".write": false
    },
    "fee": {
      ".read": true,
      ".write": false
    },


    ////// QUEUES
    "queue": {
      "myEthBalance": {
       "tasks": {
       ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"

          }
        }
      },
      "myEthAddress": {
       "tasks": {
       ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "withdrawPhoneCheck": {
       "tasks": {
       ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "withdrawlAmmount": {
       "tasks": {
       ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "personalData": {
       "tasks": {
       ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "addTags": {
       "tasks": {
       ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "stripe": {
       "tasks": {
       ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "phone": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "progressBar": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "confirmPhone": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"

          }
        }
      },
      "usertype10": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"

          }
        }
      },
      "usertype99": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"

          }
        }
      },
      "confirmCode": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".read": false,
      		 ".write": false
          }
        }
      },
      "contentStart": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"

          }
        }
      },
      "contentFinished": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"

          }
        }
      },
      "freeTokens": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "newUserData": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "linkTimer": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"
          }
        }
      },
      "terms": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()",
           ".write": "auth.uid == newData.child('userId').val()"

          }
        }
      },
      "uploadContent": {
       "tasks": {
         ".indexOn": ["_state"],
         "$task": {
           ".indexOn": ["_state"],
           ".validate": "auth.uid == newData.child('userId').val()"
          }
        }
      }
    }
  }
}
